/**
 * BaaSCaradhrasAPIDocumentationLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of MKnowyourclientPeople
 */
class MKnowyourclientPeople extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.basicData = this.constructor.getValue(obj.basicData || obj.BasicData);
        this.addresses = this.constructor.getValue(obj.addresses || obj.Addresses);
        this.phones = this.constructor.getValue(obj.phones || obj.Phones);
        this.sanctions = this.constructor.getValue(obj.sanctions || obj.Sanctions);
        this.collections = this.constructor.getValue(obj.collections || obj.Collections);
        this.score = this.constructor.getValue(obj.score || obj.Score);
        this.docInfo = this.constructor.getValue(obj.docInfo || obj.DocInfo);
        this.ticketId = this.constructor.getValue(obj.ticketId || obj.TicketId);
        this.resultCode = this.constructor.getValue(obj.resultCode || obj.ResultCode);
        this.resultMessage = this.constructor.getValue(obj.resultMessage || obj.ResultMessage);
        this.questions = this.constructor.getValue(obj.questions || obj.Questions);
        this.onlineCertificates =
          this.constructor.getValue(obj.onlineCertificates
     || obj.OnlineCertificates);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'basicData', realName: 'BasicData', type: 'BasicData' },
            { name: 'addresses', realName: 'Addresses', array: true, type: 'Address23' },
            { name: 'phones', realName: 'Phones', array: true, type: 'Phone23' },
            { name: 'sanctions', realName: 'Sanctions', type: 'Sanctions' },
            { name: 'collections', realName: 'Collections', type: 'Collections' },
            { name: 'score', realName: 'Score', type: 'Score' },
            { name: 'docInfo', realName: 'DocInfo' },
            { name: 'ticketId', realName: 'TicketId' },
            { name: 'resultCode', realName: 'ResultCode' },
            { name: 'resultMessage', realName: 'ResultMessage' },
            { name: 'questions', realName: 'Questions', array: true },
            {
                name: 'onlineCertificates',
                realName: 'OnlineCertificates',
                array: true,
                type: 'OnlineCertificate',
            },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = MKnowyourclientPeople;
