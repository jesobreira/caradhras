/**
 * BaaSCaradhrasAPIDocumentationLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of Individual4
 */
class Individual4 extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.addresses = this.constructor.getValue(obj.addresses);
        this.occupation = this.constructor.getValue(obj.occupation);
        this.gender = this.constructor.getValue(obj.gender);
        this.mainPhone = this.constructor.getValue(obj.mainPhone);
        this.profile = this.constructor.getValue(obj.profile);
        this.motherName = this.constructor.getValue(obj.motherName);
        this.phones = this.constructor.getValue(obj.phones);
        this.identityCard = this.constructor.getValue(obj.identityCard);
        this.isPep = this.constructor.getValue(obj.isPep);
        this.type = this.constructor.getValue(obj.type);
        this.birthDate = this.constructor.getValue(obj.birthDate);
        this.mainAddress = this.constructor.getValue(obj.mainAddress);
        this.nationalRegistration = this.constructor.getValue(obj.nationalRegistration);
        this.revenue = this.constructor.getValue(obj.revenue);
        this.name = this.constructor.getValue(obj.name);
        this.pep = this.constructor.getValue(obj.pep);
        this.maritalStatus = this.constructor.getValue(obj.maritalStatus);
        this.email = this.constructor.getValue(obj.email);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'addresses', realName: 'addresses', array: true, type: 'Address1' },
            { name: 'occupation', realName: 'occupation' },
            { name: 'gender', realName: 'gender' },
            { name: 'mainPhone', realName: 'mainPhone', type: 'MainPhone13' },
            { name: 'profile', realName: 'profile' },
            { name: 'motherName', realName: 'motherName' },
            { name: 'phones', realName: 'phones', array: true, type: 'Phone' },
            { name: 'identityCard', realName: 'identityCard', type: 'IdentityCard' },
            { name: 'isPep', realName: 'isPep' },
            { name: 'type', realName: 'type', array: true },
            { name: 'birthDate', realName: 'birthDate' },
            { name: 'mainAddress', realName: 'mainAddress', type: 'MainAddress' },
            { name: 'nationalRegistration', realName: 'nationalRegistration' },
            { name: 'revenue', realName: 'revenue' },
            { name: 'name', realName: 'name' },
            { name: 'pep', realName: 'pep' },
            { name: 'maritalStatus', realName: 'maritalStatus' },
            { name: 'email', realName: 'email' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = Individual4;
