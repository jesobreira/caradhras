/**
 * BaaSCaradhrasAPIDocumentationLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of Content8
 */
class Content8 extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.id = this.constructor.getValue(obj.id);
        this.nome = this.constructor.getValue(obj.nome);
        this.flagCancelaCartao = this.constructor.getValue(obj.flagCancelaCartao);
        this.flagCancelaNoDesbloqueio = this.constructor.getValue(obj.flagCancelaNoDesbloqueio);
        this.idStatusDestinoDesbloqueio = this.constructor.getValue(obj.idStatusDestinoDesbloqueio);
        this.idStatusDestinoConta = this.constructor.getValue(obj.idStatusDestinoConta);
        this.flagCobraTarifa = this.constructor.getValue(obj.flagCobraTarifa);
        this.flagPermiteNovaViaCartao = this.constructor.getValue(obj.flagPermiteNovaViaCartao);
        this.flagPermiteDesbloqueio = this.constructor.getValue(obj.flagPermiteDesbloqueio);
        this.flagCancelamento = this.constructor.getValue(obj.flagCancelamento);
        this.flagPermiteBloqueio = this.constructor.getValue(obj.flagPermiteBloqueio);
        this.flagReativar = this.constructor.getValue(obj.flagReativar);
        this.permiteDesbloquear = this.constructor.getValue(obj.permiteDesbloquear);
        this.permiteAtribuirComoBloqueio =
          this.constructor.getValue(obj.permiteAtribuirComoBloqueio);
        this.permiteAtribuirComoCancelamento =
          this.constructor.getValue(obj.permiteAtribuirComoCancelamento);
        this.cobrarTarifaAoEmitirNovaVia =
          this.constructor.getValue(obj.cobrarTarifaAoEmitirNovaVia);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'id', realName: 'id' },
            { name: 'nome', realName: 'nome' },
            { name: 'flagCancelaCartao', realName: 'flagCancelaCartao' },
            { name: 'flagCancelaNoDesbloqueio', realName: 'flagCancelaNoDesbloqueio' },
            { name: 'idStatusDestinoDesbloqueio', realName: 'idStatusDestinoDesbloqueio' },
            { name: 'idStatusDestinoConta', realName: 'idStatusDestinoConta' },
            { name: 'flagCobraTarifa', realName: 'flagCobraTarifa' },
            { name: 'flagPermiteNovaViaCartao', realName: 'flagPermiteNovaViaCartao' },
            { name: 'flagPermiteDesbloqueio', realName: 'flagPermiteDesbloqueio' },
            { name: 'flagCancelamento', realName: 'flagCancelamento' },
            { name: 'flagPermiteBloqueio', realName: 'flagPermiteBloqueio' },
            { name: 'flagReativar', realName: 'flagReativar' },
            { name: 'permiteDesbloquear', realName: 'permiteDesbloquear' },
            { name: 'permiteAtribuirComoBloqueio', realName: 'permiteAtribuirComoBloqueio' },
            {
                name: 'permiteAtribuirComoCancelamento',
                realName: 'permiteAtribuirComoCancelamento',
            },
            { name: 'cobrarTarifaAoEmitirNovaVia', realName: 'cobrarTarifaAoEmitirNovaVia' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = Content8;
