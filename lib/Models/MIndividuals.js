/**
 * BaaSCaradhrasAPIDocumentationLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of MIndividuals
 */
class MIndividuals extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.previousPage = this.constructor.getValue(obj.previousPage);
        this.currentPage = this.constructor.getValue(obj.currentPage);
        this.nextPage = this.constructor.getValue(obj.nextPage);
        this.last = this.constructor.getValue(obj.last);
        this.totalPages = this.constructor.getValue(obj.totalPages);
        this.totalItems = this.constructor.getValue(obj.totalItems);
        this.maxItemsPerPage = this.constructor.getValue(obj.maxItemsPerPage);
        this.totalItemsPage = this.constructor.getValue(obj.totalItemsPage);
        this.items = this.constructor.getValue(obj.items);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'previousPage', realName: 'previousPage' },
            { name: 'currentPage', realName: 'currentPage' },
            { name: 'nextPage', realName: 'nextPage' },
            { name: 'last', realName: 'last' },
            { name: 'totalPages', realName: 'totalPages' },
            { name: 'totalItems', realName: 'totalItems' },
            { name: 'maxItemsPerPage', realName: 'maxItemsPerPage' },
            { name: 'totalItemsPage', realName: 'totalItemsPage' },
            { name: 'items', realName: 'items', array: true, type: 'Item' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = MIndividuals;
