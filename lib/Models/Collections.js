/**
 * BaaSCaradhrasAPIDocumentationLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of Collections
 */
class Collections extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.collectionOccurrences =
          this.constructor.getValue(obj.collectionOccurrences
     || obj.CollectionOccurrences);
        this.collectionOrigins =
          this.constructor.getValue(obj.collectionOrigins
     || obj.CollectionOrigins);
        this.firstCollectionDate =
          this.constructor.getValue(obj.firstCollectionDate
     || obj.FirstCollectionDate);
        this.lastCollectionDate =
          this.constructor.getValue(obj.lastCollectionDate
     || obj.LastCollectionDate);
        this.creationDate = this.constructor.getValue(obj.creationDate || obj.CreationDate);
        this.lastUpdateDate = this.constructor.getValue(obj.lastUpdateDate || obj.LastUpdateDate);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'collectionOccurrences', realName: 'CollectionOccurrences' },
            { name: 'collectionOrigins', realName: 'CollectionOrigins' },
            { name: 'firstCollectionDate', realName: 'FirstCollectionDate' },
            { name: 'lastCollectionDate', realName: 'LastCollectionDate' },
            { name: 'creationDate', realName: 'CreationDate' },
            { name: 'lastUpdateDate', realName: 'LastUpdateDate' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = Collections;
