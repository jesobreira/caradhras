/**
 * BaaSCaradhrasAPIDocumentationLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of MContasIdBloquear
 */
class MContasIdBloquear extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.id = this.constructor.getValue(obj.id);
        this.idProduto = this.constructor.getValue(obj.idProduto);
        this.idOrigemComercial = this.constructor.getValue(obj.idOrigemComercial);
        this.idPessoa = this.constructor.getValue(obj.idPessoa);
        this.idStatusConta = this.constructor.getValue(obj.idStatusConta);
        this.diaVencimento = this.constructor.getValue(obj.diaVencimento);
        this.melhorDiaCompra = this.constructor.getValue(obj.melhorDiaCompra);
        this.dataStatusConta = this.constructor.getValue(obj.dataStatusConta);
        this.dataCadastro = this.constructor.getValue(obj.dataCadastro);
        this.dataUltimaAlteracaoVencimento =
          this.constructor.getValue(obj.dataUltimaAlteracaoVencimento);
        this.valorRenda = this.constructor.getValue(obj.valorRenda);
        this.idProposta = this.constructor.getValue(obj.idProposta);
        this.funcaoAtiva = this.constructor.getValue(obj.funcaoAtiva);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'id', realName: 'id' },
            { name: 'idProduto', realName: 'idProduto' },
            { name: 'idOrigemComercial', realName: 'idOrigemComercial' },
            { name: 'idPessoa', realName: 'idPessoa' },
            { name: 'idStatusConta', realName: 'idStatusConta' },
            { name: 'diaVencimento', realName: 'diaVencimento' },
            { name: 'melhorDiaCompra', realName: 'melhorDiaCompra' },
            { name: 'dataStatusConta', realName: 'dataStatusConta' },
            { name: 'dataCadastro', realName: 'dataCadastro' },
            { name: 'dataUltimaAlteracaoVencimento', realName: 'dataUltimaAlteracaoVencimento' },
            { name: 'valorRenda', realName: 'valorRenda' },
            { name: 'idProposta', realName: 'idProposta' },
            { name: 'funcaoAtiva', realName: 'funcaoAtiva' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = MContasIdBloquear;
