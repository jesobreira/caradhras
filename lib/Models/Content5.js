/**
 * BaaSCaradhrasAPIDocumentationLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of Content5
 */
class Content5 extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.idTipoTransacaoNaoProcessada =
          this.constructor.getValue(obj.idTipoTransacaoNaoProcessada);
        this.descricaoTipoTransacaoNaoProcessada =
          this.constructor.getValue(obj.descricaoTipoTransacaoNaoProcessada);
        this.idEventoAjuste = this.constructor.getValue(obj.idEventoAjuste);
        this.descricaoAbreviada = this.constructor.getValue(obj.descricaoAbreviada);
        this.idConta = this.constructor.getValue(obj.idConta);
        this.cartaoMascarado = this.constructor.getValue(obj.cartaoMascarado);
        this.nomePortador = this.constructor.getValue(obj.nomePortador);
        this.dataOrigem = this.constructor.getValue(obj.dataOrigem);
        this.dataFaturamento = this.constructor.getValue(obj.dataFaturamento);
        this.dataVencimentoReal = this.constructor.getValue(obj.dataVencimentoReal);
        this.modoEntradaTransacao = this.constructor.getValue(obj.modoEntradaTransacao);
        this.taxaEmbarque = this.constructor.getValue(obj.taxaEmbarque);
        this.valorEntrada = this.constructor.getValue(obj.valorEntrada);
        this.valorBRL = this.constructor.getValue(obj.valorBRL);
        this.valorUSD = this.constructor.getValue(obj.valorUSD);
        this.cotacaoUSD = this.constructor.getValue(obj.cotacaoUSD);
        this.dataCotacaoUSD = this.constructor.getValue(obj.dataCotacaoUSD);
        this.codigoMoedaOrigem = this.constructor.getValue(obj.codigoMoedaOrigem);
        this.codigoMoedaDestino = this.constructor.getValue(obj.codigoMoedaDestino);
        this.codigoAutorizacao = this.constructor.getValue(obj.codigoAutorizacao);
        this.codigoReferencia = this.constructor.getValue(obj.codigoReferencia);
        this.codigoTerminal = this.constructor.getValue(obj.codigoTerminal);
        this.codigoMCC = this.constructor.getValue(obj.codigoMCC);
        this.grupoMCC = this.constructor.getValue(obj.grupoMCC);
        this.grupoDescricaoMCC = this.constructor.getValue(obj.grupoDescricaoMCC);
        this.idEstabelecimento = this.constructor.getValue(obj.idEstabelecimento);
        this.nomeEstabelecimento = this.constructor.getValue(obj.nomeEstabelecimento);
        this.nomeFantasiaEstabelecimento =
          this.constructor.getValue(obj.nomeFantasiaEstabelecimento);
        this.localidadeEstabelecimento = this.constructor.getValue(obj.localidadeEstabelecimento);
        this.plano = this.constructor.getValue(obj.plano);
        this.parcela = this.constructor.getValue(obj.parcela);
        this.flagCredito = this.constructor.getValue(obj.flagCredito);
        this.flagFaturado = this.constructor.getValue(obj.flagFaturado);
        this.idTransacaoEstorno = this.constructor.getValue(obj.idTransacaoEstorno);
        this.status = this.constructor.getValue(obj.status);
        this.idTipoAjuste = this.constructor.getValue(obj.idTipoAjuste);
        this.valorTAC = this.constructor.getValue(obj.valorTAC);
        this.valorIOF = this.constructor.getValue(obj.valorIOF);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'idTipoTransacaoNaoProcessada', realName: 'idTipoTransacaoNaoProcessada' },
            {
                name: 'descricaoTipoTransacaoNaoProcessada',
                realName: 'descricaoTipoTransacaoNaoProcessada',
            },
            { name: 'idEventoAjuste', realName: 'idEventoAjuste' },
            { name: 'descricaoAbreviada', realName: 'descricaoAbreviada' },
            { name: 'idConta', realName: 'idConta' },
            { name: 'cartaoMascarado', realName: 'cartaoMascarado' },
            { name: 'nomePortador', realName: 'nomePortador' },
            { name: 'dataOrigem', realName: 'dataOrigem' },
            { name: 'dataFaturamento', realName: 'dataFaturamento' },
            { name: 'dataVencimentoReal', realName: 'dataVencimentoReal' },
            { name: 'modoEntradaTransacao', realName: 'modoEntradaTransacao' },
            { name: 'taxaEmbarque', realName: 'taxaEmbarque' },
            { name: 'valorEntrada', realName: 'valorEntrada' },
            { name: 'valorBRL', realName: 'valorBRL' },
            { name: 'valorUSD', realName: 'valorUSD' },
            { name: 'cotacaoUSD', realName: 'cotacaoUSD' },
            { name: 'dataCotacaoUSD', realName: 'dataCotacaoUSD' },
            { name: 'codigoMoedaOrigem', realName: 'codigoMoedaOrigem' },
            { name: 'codigoMoedaDestino', realName: 'codigoMoedaDestino' },
            { name: 'codigoAutorizacao', realName: 'codigoAutorizacao' },
            { name: 'codigoReferencia', realName: 'codigoReferencia' },
            { name: 'codigoTerminal', realName: 'codigoTerminal' },
            { name: 'codigoMCC', realName: 'codigoMCC' },
            { name: 'grupoMCC', realName: 'grupoMCC' },
            { name: 'grupoDescricaoMCC', realName: 'grupoDescricaoMCC' },
            { name: 'idEstabelecimento', realName: 'idEstabelecimento' },
            { name: 'nomeEstabelecimento', realName: 'nomeEstabelecimento' },
            { name: 'nomeFantasiaEstabelecimento', realName: 'nomeFantasiaEstabelecimento' },
            { name: 'localidadeEstabelecimento', realName: 'localidadeEstabelecimento' },
            { name: 'plano', realName: 'plano' },
            { name: 'parcela', realName: 'parcela' },
            { name: 'flagCredito', realName: 'flagCredito' },
            { name: 'flagFaturado', realName: 'flagFaturado' },
            { name: 'idTransacaoEstorno', realName: 'idTransacaoEstorno' },
            { name: 'status', realName: 'status' },
            { name: 'idTipoAjuste', realName: 'idTipoAjuste' },
            { name: 'valorTAC', realName: 'valorTAC' },
            { name: 'valorIOF', realName: 'valorIOF' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = Content5;
