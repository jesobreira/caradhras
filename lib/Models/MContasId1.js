/**
 * BaaSCaradhrasAPIDocumentationLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of MContasId1
 */
class MContasId1 extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.id = this.constructor.getValue(obj.id);
        this.idPessoa = this.constructor.getValue(obj.idPessoa);
        this.nome = this.constructor.getValue(obj.nome);
        this.idProduto = this.constructor.getValue(obj.idProduto);
        this.idOrigemComercial = this.constructor.getValue(obj.idOrigemComercial);
        this.nomeOrigemComercial = this.constructor.getValue(obj.nomeOrigemComercial);
        this.idFantasiaBasica = this.constructor.getValue(obj.idFantasiaBasica);
        this.nomeFantasiaBasica = this.constructor.getValue(obj.nomeFantasiaBasica);
        this.idStatusConta = this.constructor.getValue(obj.idStatusConta);
        this.statusConta = this.constructor.getValue(obj.statusConta);
        this.diaVencimento = this.constructor.getValue(obj.diaVencimento);
        this.melhorDiaCompra = this.constructor.getValue(obj.melhorDiaCompra);
        this.dataStatusConta = this.constructor.getValue(obj.dataStatusConta);
        this.dataCadastro = this.constructor.getValue(obj.dataCadastro);
        this.dataUltimaAlteracaoVencimento =
          this.constructor.getValue(obj.dataUltimaAlteracaoVencimento);
        this.dataHoraUltimaCompra = this.constructor.getValue(obj.dataHoraUltimaCompra);
        this.numeroAgencia = this.constructor.getValue(obj.numeroAgencia);
        this.numeroContaCorrente = this.constructor.getValue(obj.numeroContaCorrente);
        this.valorRenda = this.constructor.getValue(obj.valorRenda);
        this.formaEnvioFatura = this.constructor.getValue(obj.formaEnvioFatura);
        this.titular = this.constructor.getValue(obj.titular);
        this.limiteGlobal = this.constructor.getValue(obj.limiteGlobal);
        this.limiteSaqueGlobal = this.constructor.getValue(obj.limiteSaqueGlobal);
        this.saldoDisponivelGlobal = this.constructor.getValue(obj.saldoDisponivelGlobal);
        this.saldoDisponivelSaque = this.constructor.getValue(obj.saldoDisponivelSaque);
        this.impedidoFinanciamento = this.constructor.getValue(obj.impedidoFinanciamento);
        this.diasAtraso = this.constructor.getValue(obj.diasAtraso);
        this.proximoVencimentoPadrao = this.constructor.getValue(obj.proximoVencimentoPadrao);
        this.idProposta = this.constructor.getValue(obj.idProposta);
        this.quantidadePagamentos = this.constructor.getValue(obj.quantidadePagamentos);
        this.correspondencia = this.constructor.getValue(obj.correspondencia);
        this.dataInicioAtraso = this.constructor.getValue(obj.dataInicioAtraso);
        this.rotativoPagaJuros = this.constructor.getValue(obj.rotativoPagaJuros);
        this.totalPosProx = this.constructor.getValue(obj.totalPosProx);
        this.saldoAtualFinal = this.constructor.getValue(obj.saldoAtualFinal);
        this.saldoExtratoAnterior = this.constructor.getValue(obj.saldoExtratoAnterior);
        this.aceitaNovaContaPorGrupoProduto =
          this.constructor.getValue(obj.aceitaNovaContaPorGrupoProduto);
        this.funcaoAtiva = this.constructor.getValue(obj.funcaoAtiva);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'id', realName: 'id' },
            { name: 'idPessoa', realName: 'idPessoa' },
            { name: 'nome', realName: 'nome' },
            { name: 'idProduto', realName: 'idProduto' },
            { name: 'idOrigemComercial', realName: 'idOrigemComercial' },
            { name: 'nomeOrigemComercial', realName: 'nomeOrigemComercial' },
            { name: 'idFantasiaBasica', realName: 'idFantasiaBasica' },
            { name: 'nomeFantasiaBasica', realName: 'nomeFantasiaBasica' },
            { name: 'idStatusConta', realName: 'idStatusConta' },
            { name: 'statusConta', realName: 'statusConta' },
            { name: 'diaVencimento', realName: 'diaVencimento' },
            { name: 'melhorDiaCompra', realName: 'melhorDiaCompra' },
            { name: 'dataStatusConta', realName: 'dataStatusConta' },
            { name: 'dataCadastro', realName: 'dataCadastro' },
            { name: 'dataUltimaAlteracaoVencimento', realName: 'dataUltimaAlteracaoVencimento' },
            { name: 'dataHoraUltimaCompra', realName: 'dataHoraUltimaCompra' },
            { name: 'numeroAgencia', realName: 'numeroAgencia' },
            { name: 'numeroContaCorrente', realName: 'numeroContaCorrente' },
            { name: 'valorRenda', realName: 'valorRenda' },
            { name: 'formaEnvioFatura', realName: 'formaEnvioFatura' },
            { name: 'titular', realName: 'titular' },
            { name: 'limiteGlobal', realName: 'limiteGlobal' },
            { name: 'limiteSaqueGlobal', realName: 'limiteSaqueGlobal' },
            { name: 'saldoDisponivelGlobal', realName: 'saldoDisponivelGlobal' },
            { name: 'saldoDisponivelSaque', realName: 'saldoDisponivelSaque' },
            { name: 'impedidoFinanciamento', realName: 'impedidoFinanciamento' },
            { name: 'diasAtraso', realName: 'diasAtraso' },
            { name: 'proximoVencimentoPadrao', realName: 'proximoVencimentoPadrao' },
            { name: 'idProposta', realName: 'idProposta' },
            { name: 'quantidadePagamentos', realName: 'quantidadePagamentos' },
            { name: 'correspondencia', realName: 'correspondencia' },
            { name: 'dataInicioAtraso', realName: 'dataInicioAtraso' },
            { name: 'rotativoPagaJuros', realName: 'rotativoPagaJuros' },
            { name: 'totalPosProx', realName: 'totalPosProx' },
            { name: 'saldoAtualFinal', realName: 'saldoAtualFinal' },
            { name: 'saldoExtratoAnterior', realName: 'saldoExtratoAnterior' },
            { name: 'aceitaNovaContaPorGrupoProduto', realName: 'aceitaNovaContaPorGrupoProduto' },
            { name: 'funcaoAtiva', realName: 'funcaoAtiva' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = MContasId1;
