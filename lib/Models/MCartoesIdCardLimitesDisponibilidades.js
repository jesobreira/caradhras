/**
 * BaaSCaradhrasAPIDocumentationLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of MCartoesIdCardLimitesDisponibilidades
 */
class MCartoesIdCardLimitesDisponibilidades extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.id = this.constructor.getValue(obj.id);
        this.limiteGlobal = this.constructor.getValue(obj.limiteGlobal);
        this.limiteCompra = this.constructor.getValue(obj.limiteCompra);
        this.limiteParcelado = this.constructor.getValue(obj.limiteParcelado);
        this.limiteParcelas = this.constructor.getValue(obj.limiteParcelas);
        this.limiteSaqueGlobal = this.constructor.getValue(obj.limiteSaqueGlobal);
        this.limiteSaquePeriodo = this.constructor.getValue(obj.limiteSaquePeriodo);
        this.limiteConsignado = this.constructor.getValue(obj.limiteConsignado);
        this.limiteInternacionalCompra = this.constructor.getValue(obj.limiteInternacionalCompra);
        this.limiteInternacionalParcelado =
          this.constructor.getValue(obj.limiteInternacionalParcelado);
        this.limiteInternacionalParcelas =
          this.constructor.getValue(obj.limiteInternacionalParcelas);
        this.limiteInternacionalSaqueGlobal =
          this.constructor.getValue(obj.limiteInternacionalSaqueGlobal);
        this.limiteInternacionalSaquePeriodo =
          this.constructor.getValue(obj.limiteInternacionalSaquePeriodo);
        this.limiteMaximo = this.constructor.getValue(obj.limiteMaximo);
        this.saldoDisponivelGlobal = this.constructor.getValue(obj.saldoDisponivelGlobal);
        this.saldoDisponivelCompra = this.constructor.getValue(obj.saldoDisponivelCompra);
        this.saldoDisponivelParcelado = this.constructor.getValue(obj.saldoDisponivelParcelado);
        this.saldoDisponivelParcelas = this.constructor.getValue(obj.saldoDisponivelParcelas);
        this.saldoDisponivelSaque = this.constructor.getValue(obj.saldoDisponivelSaque);
        this.saldoPontosFidelidade = this.constructor.getValue(obj.saldoPontosFidelidade);
        this.saldoDisponivelCompraInternacional =
          this.constructor.getValue(obj.saldoDisponivelCompraInternacional);
        this.saldoDisponivelSaqueInternacional =
          this.constructor.getValue(obj.saldoDisponivelSaqueInternacional);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'id', realName: 'id' },
            { name: 'limiteGlobal', realName: 'limiteGlobal' },
            { name: 'limiteCompra', realName: 'limiteCompra' },
            { name: 'limiteParcelado', realName: 'limiteParcelado' },
            { name: 'limiteParcelas', realName: 'limiteParcelas' },
            { name: 'limiteSaqueGlobal', realName: 'limiteSaqueGlobal' },
            { name: 'limiteSaquePeriodo', realName: 'limiteSaquePeriodo' },
            { name: 'limiteConsignado', realName: 'limiteConsignado' },
            { name: 'limiteInternacionalCompra', realName: 'limiteInternacionalCompra' },
            { name: 'limiteInternacionalParcelado', realName: 'limiteInternacionalParcelado' },
            { name: 'limiteInternacionalParcelas', realName: 'limiteInternacionalParcelas' },
            { name: 'limiteInternacionalSaqueGlobal', realName: 'limiteInternacionalSaqueGlobal' },
            {
                name: 'limiteInternacionalSaquePeriodo',
                realName: 'limiteInternacionalSaquePeriodo',
            },
            { name: 'limiteMaximo', realName: 'limiteMaximo' },
            { name: 'saldoDisponivelGlobal', realName: 'saldoDisponivelGlobal' },
            { name: 'saldoDisponivelCompra', realName: 'saldoDisponivelCompra' },
            { name: 'saldoDisponivelParcelado', realName: 'saldoDisponivelParcelado' },
            { name: 'saldoDisponivelParcelas', realName: 'saldoDisponivelParcelas' },
            { name: 'saldoDisponivelSaque', realName: 'saldoDisponivelSaque' },
            { name: 'saldoPontosFidelidade', realName: 'saldoPontosFidelidade' },
            {
                name: 'saldoDisponivelCompraInternacional',
                realName: 'saldoDisponivelCompraInternacional',
            },
            {
                name: 'saldoDisponivelSaqueInternacional',
                realName: 'saldoDisponivelSaqueInternacional',
            },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = MCartoesIdCardLimitesDisponibilidades;
