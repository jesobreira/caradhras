/**
 * BaaSCaradhrasAPIDocumentationLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of MEnderecosId
 */
class MEnderecosId extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.id = this.constructor.getValue(obj.id);
        this.idPessoa = this.constructor.getValue(obj.idPessoa);
        this.idTipoEndereco = this.constructor.getValue(obj.idTipoEndereco);
        this.cep = this.constructor.getValue(obj.cep);
        this.logradouro = this.constructor.getValue(obj.logradouro);
        this.numero = this.constructor.getValue(obj.numero);
        this.complemento = this.constructor.getValue(obj.complemento);
        this.pontoReferencia = this.constructor.getValue(obj.pontoReferencia);
        this.bairro = this.constructor.getValue(obj.bairro);
        this.cidade = this.constructor.getValue(obj.cidade);
        this.uf = this.constructor.getValue(obj.uf);
        this.pais = this.constructor.getValue(obj.pais);
        this.dataInclusao = this.constructor.getValue(obj.dataInclusao);
        this.dataUltimaAtualizacao = this.constructor.getValue(obj.dataUltimaAtualizacao);
        this.flagCorrespondencia = this.constructor.getValue(obj.flagCorrespondencia);
        this.tempoResidenciaAnos = this.constructor.getValue(obj.tempoResidenciaAnos);
        this.tempoResidenciaMeses = this.constructor.getValue(obj.tempoResidenciaMeses);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'id', realName: 'id' },
            { name: 'idPessoa', realName: 'idPessoa' },
            { name: 'idTipoEndereco', realName: 'idTipoEndereco' },
            { name: 'cep', realName: 'cep' },
            { name: 'logradouro', realName: 'logradouro' },
            { name: 'numero', realName: 'numero' },
            { name: 'complemento', realName: 'complemento' },
            { name: 'pontoReferencia', realName: 'pontoReferencia' },
            { name: 'bairro', realName: 'bairro' },
            { name: 'cidade', realName: 'cidade' },
            { name: 'uf', realName: 'uf' },
            { name: 'pais', realName: 'pais' },
            { name: 'dataInclusao', realName: 'dataInclusao' },
            { name: 'dataUltimaAtualizacao', realName: 'dataUltimaAtualizacao' },
            { name: 'flagCorrespondencia', realName: 'flagCorrespondencia' },
            { name: 'tempoResidenciaAnos', realName: 'tempoResidenciaAnos' },
            { name: 'tempoResidenciaMeses', realName: 'tempoResidenciaMeses' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = MEnderecosId;
