/**
 * BaaSCaradhrasAPIDocumentationLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of BasicData
 */
class BasicData extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.taxIdNumber = this.constructor.getValue(obj.taxIdNumber || obj.TaxIdNumber);
        this.name = this.constructor.getValue(obj.name || obj.Name);
        this.gender = this.constructor.getValue(obj.gender || obj.Gender);
        this.birthDate = this.constructor.getValue(obj.birthDate || obj.BirthDate);
        this.zodiacSign = this.constructor.getValue(obj.zodiacSign || obj.ZodiacSign);
        this.motherName = this.constructor.getValue(obj.motherName || obj.MotherName);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'taxIdNumber', realName: 'TaxIdNumber' },
            { name: 'name', realName: 'Name' },
            { name: 'gender', realName: 'Gender' },
            { name: 'birthDate', realName: 'BirthDate' },
            { name: 'zodiacSign', realName: 'ZodiacSign' },
            { name: 'motherName', realName: 'MotherName' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = BasicData;
