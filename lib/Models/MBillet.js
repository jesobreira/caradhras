/**
 * BaaSCaradhrasAPIDocumentationLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of MBillet
 */
class MBillet extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.numeroDoDocumento = this.constructor.getValue(obj.numeroDoDocumento);
        this.dataProcessamento = this.constructor.getValue(obj.dataProcessamento);
        this.dataDocumento = this.constructor.getValue(obj.dataDocumento);
        this.dataVencimento = this.constructor.getValue(obj.dataVencimento);
        this.dataFechamento = this.constructor.getValue(obj.dataFechamento);
        this.valorBoleto = this.constructor.getValue(obj.valorBoleto);
        this.nomeBeneficiario = this.constructor.getValue(obj.nomeBeneficiario);
        this.documentoBeneficiario = this.constructor.getValue(obj.documentoBeneficiario);
        this.agencia = this.constructor.getValue(obj.agencia);
        this.codigoBeneficiario = this.constructor.getValue(obj.codigoBeneficiario);
        this.numeroConvenio = this.constructor.getValue(obj.numeroConvenio);
        this.digitoCodigoBeneficiario = this.constructor.getValue(obj.digitoCodigoBeneficiario);
        this.carteira = this.constructor.getValue(obj.carteira);
        this.nossoNumero = this.constructor.getValue(obj.nossoNumero);
        this.digitoNossoNumero = this.constructor.getValue(obj.digitoNossoNumero);
        this.banco = this.constructor.getValue(obj.banco);
        this.aceite = this.constructor.getValue(obj.aceite);
        this.especieDoDocumento = this.constructor.getValue(obj.especieDoDocumento);
        this.especie = this.constructor.getValue(obj.especie);
        this.instrucoes = this.constructor.getValue(obj.instrucoes);
        this.locaisDePagamento = this.constructor.getValue(obj.locaisDePagamento);
        this.nomePagador = this.constructor.getValue(obj.nomePagador);
        this.documentoPagador = this.constructor.getValue(obj.documentoPagador);
        this.logradouroPagador = this.constructor.getValue(obj.logradouroPagador);
        this.bairroPagador = this.constructor.getValue(obj.bairroPagador);
        this.cepPagador = this.constructor.getValue(obj.cepPagador);
        this.cidadePagador = this.constructor.getValue(obj.cidadePagador);
        this.ufPagador = this.constructor.getValue(obj.ufPagador);
        this.codigoDeBarras = this.constructor.getValue(obj.codigoDeBarras);
        this.linhaDigitavel = this.constructor.getValue(obj.linhaDigitavel);
        this.id = this.constructor.getValue(obj.id);
        this.idConta = this.constructor.getValue(obj.idConta);
        this.enderecoCobrancaBeneficiario =
          this.constructor.getValue(obj.enderecoCobrancaBeneficiario);
        this.status = this.constructor.getValue(obj.status);
        this.boletoRegistrado = this.constructor.getValue(obj.boletoRegistrado);
        this.fontePagadora = this.constructor.getValue(obj.fontePagadora);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'numeroDoDocumento', realName: 'numeroDoDocumento' },
            { name: 'dataProcessamento', realName: 'dataProcessamento' },
            { name: 'dataDocumento', realName: 'dataDocumento' },
            { name: 'dataVencimento', realName: 'dataVencimento' },
            { name: 'dataFechamento', realName: 'dataFechamento' },
            { name: 'valorBoleto', realName: 'valorBoleto' },
            { name: 'nomeBeneficiario', realName: 'nomeBeneficiario' },
            { name: 'documentoBeneficiario', realName: 'documentoBeneficiario' },
            { name: 'agencia', realName: 'agencia' },
            { name: 'codigoBeneficiario', realName: 'codigoBeneficiario' },
            { name: 'numeroConvenio', realName: 'numeroConvenio' },
            { name: 'digitoCodigoBeneficiario', realName: 'digitoCodigoBeneficiario' },
            { name: 'carteira', realName: 'carteira' },
            { name: 'nossoNumero', realName: 'nossoNumero' },
            { name: 'digitoNossoNumero', realName: 'digitoNossoNumero' },
            { name: 'banco', realName: 'banco' },
            { name: 'aceite', realName: 'aceite' },
            { name: 'especieDoDocumento', realName: 'especieDoDocumento' },
            { name: 'especie', realName: 'especie' },
            { name: 'instrucoes', realName: 'instrucoes', array: true },
            { name: 'locaisDePagamento', realName: 'locaisDePagamento', array: true },
            { name: 'nomePagador', realName: 'nomePagador' },
            { name: 'documentoPagador', realName: 'documentoPagador' },
            { name: 'logradouroPagador', realName: 'logradouroPagador' },
            { name: 'bairroPagador', realName: 'bairroPagador' },
            { name: 'cepPagador', realName: 'cepPagador' },
            { name: 'cidadePagador', realName: 'cidadePagador' },
            { name: 'ufPagador', realName: 'ufPagador' },
            { name: 'codigoDeBarras', realName: 'codigoDeBarras' },
            { name: 'linhaDigitavel', realName: 'linhaDigitavel' },
            { name: 'id', realName: 'id' },
            { name: 'idConta', realName: 'idConta' },
            { name: 'enderecoCobrancaBeneficiario', realName: 'enderecoCobrancaBeneficiario' },
            { name: 'status', realName: 'status' },
            { name: 'boletoRegistrado', realName: 'boletoRegistrado' },
            { name: 'fontePagadora', realName: 'fontePagadora' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = MBillet;
