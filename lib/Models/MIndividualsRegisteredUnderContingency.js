/**
 * BaaSCaradhrasAPIDocumentationLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of MIndividualsRegisteredUnderContingency
 */
class MIndividualsRegisteredUnderContingency extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.id = this.constructor.getValue(obj.id);
        this.name = this.constructor.getValue(obj.name);
        this.preferredName = this.constructor.getValue(obj.preferredName);
        this.motherName = this.constructor.getValue(obj.motherName);
        this.birthDate = this.constructor.getValue(obj.birthDate);
        this.document = this.constructor.getValue(obj.document);
        this.gender = this.constructor.getValue(obj.gender);
        this.idNumber = this.constructor.getValue(obj.idNumber);
        this.identityIssuingEntity = this.constructor.getValue(obj.identityIssuingEntity);
        this.federativeUnit = this.constructor.getValue(obj.federativeUnit);
        this.issuingDateIdentity = this.constructor.getValue(obj.issuingDateIdentity);
        this.idMaritalStatus = this.constructor.getValue(obj.idMaritalStatus);
        this.idOccupationType = this.constructor.getValue(obj.idOccupationType);
        this.idProfession = this.constructor.getValue(obj.idProfession);
        this.idNationality = this.constructor.getValue(obj.idNationality);
        this.address = this.constructor.getValue(obj.address);
        this.phone = this.constructor.getValue(obj.phone);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'id', realName: 'id' },
            { name: 'name', realName: 'name' },
            { name: 'preferredName', realName: 'preferredName' },
            { name: 'motherName', realName: 'motherName' },
            { name: 'birthDate', realName: 'birthDate' },
            { name: 'document', realName: 'document' },
            { name: 'gender', realName: 'gender' },
            { name: 'idNumber', realName: 'idNumber' },
            { name: 'identityIssuingEntity', realName: 'identityIssuingEntity' },
            { name: 'federativeUnit', realName: 'federativeUnit' },
            { name: 'issuingDateIdentity', realName: 'issuingDateIdentity' },
            { name: 'idMaritalStatus', realName: 'idMaritalStatus' },
            { name: 'idOccupationType', realName: 'idOccupationType' },
            { name: 'idProfession', realName: 'idProfession' },
            { name: 'idNationality', realName: 'idNationality' },
            { name: 'address', realName: 'address', type: 'Address20' },
            { name: 'phone', realName: 'phone', type: 'Phone20' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = MIndividualsRegisteredUnderContingency;
