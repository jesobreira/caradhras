/**
 * BaaSCaradhrasAPIDocumentationLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of MBanktransfersAccountIdAccount
 */
class MBanktransfersAccountIdAccount extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.id = this.constructor.getValue(obj.id);
        this.idAdjustment = this.constructor.getValue(obj.idAdjustment);
        this.transactionCode = this.constructor.getValue(obj.transactionCode);
        this.idIssuer = this.constructor.getValue(obj.idIssuer);
        this.description = this.constructor.getValue(obj.description);
        this.idOriginAccount = this.constructor.getValue(obj.idOriginAccount);
        this.value = this.constructor.getValue(obj.value);
        this.typeAccountFavored = this.constructor.getValue(obj.typeAccountFavored);
        this.nameFavored = this.constructor.getValue(obj.nameFavored);
        this.bankFavored = this.constructor.getValue(obj.bankFavored);
        this.agencyFavored = this.constructor.getValue(obj.agencyFavored);
        this.digitAgencyFavored = this.constructor.getValue(obj.digitAgencyFavored);
        this.accountFavored = this.constructor.getValue(obj.accountFavored);
        this.digitAccountFavored = this.constructor.getValue(obj.digitAccountFavored);
        this.cnabFileName = this.constructor.getValue(obj.cnabFileName);
        this.statusTransfer = this.constructor.getValue(obj.statusTransfer);
        this.tariffCode = this.constructor.getValue(obj.tariffCode);
        this.transferenceDate = this.constructor.getValue(obj.transferenceDate);
        this.transferSuccess = this.constructor.getValue(obj.transferSuccess);
        this.codStatusTransfer = this.constructor.getValue(obj.codStatusTransfer);
        this.uid = this.constructor.getValue(obj.uid);
        this.cpfCnpjFavored = this.constructor.getValue(obj.cpfCnpjFavored);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'id', realName: 'id' },
            { name: 'idAdjustment', realName: 'idAdjustment' },
            { name: 'transactionCode', realName: 'transactionCode' },
            { name: 'idIssuer', realName: 'idIssuer' },
            { name: 'description', realName: 'description' },
            { name: 'idOriginAccount', realName: 'idOriginAccount' },
            { name: 'value', realName: 'value' },
            { name: 'typeAccountFavored', realName: 'typeAccountFavored' },
            { name: 'nameFavored', realName: 'nameFavored' },
            { name: 'bankFavored', realName: 'bankFavored' },
            { name: 'agencyFavored', realName: 'agencyFavored' },
            { name: 'digitAgencyFavored', realName: 'digitAgencyFavored' },
            { name: 'accountFavored', realName: 'accountFavored' },
            { name: 'digitAccountFavored', realName: 'digitAccountFavored' },
            { name: 'cnabFileName', realName: 'cnabFileName' },
            { name: 'statusTransfer', realName: 'statusTransfer' },
            { name: 'tariffCode', realName: 'tariffCode' },
            { name: 'transferenceDate', realName: 'transferenceDate' },
            { name: 'transferSuccess', realName: 'transferSuccess' },
            { name: 'codStatusTransfer', realName: 'codStatusTransfer' },
            { name: 'uid', realName: 'uid' },
            { name: 'cpfCnpjFavored', realName: 'cpfCnpjFavored' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = MBanktransfersAccountIdAccount;
