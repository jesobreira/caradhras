/**
 * BaaSCaradhrasAPIDocumentationLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of Item2
 */
class Item2 extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.id = this.constructor.getValue(obj.id);
        this.idIssuer = this.constructor.getValue(obj.idIssuer);
        this.idAccount = this.constructor.getValue(obj.idAccount);
        this.idSchedule = this.constructor.getValue(obj.idSchedule);
        this.scheduleDate = this.constructor.getValue(obj.scheduleDate);
        this.payload = this.constructor.getValue(obj.payload);
        this.createdAt = this.constructor.getValue(obj.createdAt);
        this.updatedAt = this.constructor.getValue(obj.updatedAt);
        this.status = this.constructor.getValue(obj.status);
        this.result = this.constructor.getValue(obj.result);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'id', realName: 'id' },
            { name: 'idIssuer', realName: 'idIssuer' },
            { name: 'idAccount', realName: 'idAccount' },
            { name: 'idSchedule', realName: 'idSchedule' },
            { name: 'scheduleDate', realName: 'scheduleDate' },
            { name: 'payload', realName: 'payload', type: 'Payload1' },
            { name: 'createdAt', realName: 'createdAt' },
            { name: 'updatedAt', realName: 'updatedAt' },
            { name: 'status', realName: 'status' },
            { name: 'result', realName: 'result' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = Item2;
