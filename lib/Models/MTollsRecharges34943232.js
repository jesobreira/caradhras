/**
 * BaaSCaradhrasAPIDocumentationLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of MTollsRecharges34943232
 */
class MTollsRecharges34943232 extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.accountNumber = this.constructor.getValue(obj.accountNumber);
        this.hexCardNumber = this.constructor.getValue(obj.hexCardNumber);
        this.transactionCounter = this.constructor.getValue(obj.transactionCounter);
        this.transactionPartnerNumber = this.constructor.getValue(obj.transactionPartnerNumber);
        this.tollCreditFeeValue = this.constructor.getValue(obj.tollCreditFeeValue);
        this.tollCreditValue = this.constructor.getValue(obj.tollCreditValue);
        this.internalCounterHex = this.constructor.getValue(obj.internalCounterHex);
        this.cardBalance = this.constructor.getValue(obj.cardBalance);
        this.createdOn = this.constructor.getValue(obj.createdOn);
        this.cryptogram = this.constructor.getValue(obj.cryptogram);
        this.confirmedOn = this.constructor.getValue(obj.confirmedOn);
        this.internalTransactionCode = this.constructor.getValue(obj.internalTransactionCode);
        this.transactionCertificate = this.constructor.getValue(obj.transactionCertificate);
        this.isCanceled = this.constructor.getValue(obj.isCanceled);
        this.status = this.constructor.getValue(obj.status);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'accountNumber', realName: 'accountNumber' },
            { name: 'hexCardNumber', realName: 'hexCardNumber' },
            { name: 'transactionCounter', realName: 'transactionCounter' },
            { name: 'transactionPartnerNumber', realName: 'transactionPartnerNumber' },
            { name: 'tollCreditFeeValue', realName: 'tollCreditFeeValue' },
            { name: 'tollCreditValue', realName: 'tollCreditValue' },
            { name: 'internalCounterHex', realName: 'internalCounterHex' },
            { name: 'cardBalance', realName: 'cardBalance' },
            { name: 'createdOn', realName: 'createdOn' },
            { name: 'cryptogram', realName: 'cryptogram' },
            { name: 'confirmedOn', realName: 'confirmedOn' },
            { name: 'internalTransactionCode', realName: 'internalTransactionCode' },
            { name: 'transactionCertificate', realName: 'transactionCertificate' },
            { name: 'isCanceled', realName: 'isCanceled' },
            { name: 'status', realName: 'status' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = MTollsRecharges34943232;
