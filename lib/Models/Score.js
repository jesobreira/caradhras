/**
 * BaaSCaradhrasAPIDocumentationLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of Score
 */
class Score extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.name = this.constructor.getValue(obj.name || obj.Name);
        this.mclass = this.constructor.getValue(obj.mclass || obj.Class);
        this.horizon = this.constructor.getValue(obj.horizon || obj.Horizon);
        this.probability = this.constructor.getValue(obj.probability || obj.Probability);
        this.score = this.constructor.getValue(obj.score || obj.Score);
        this.scoreType = this.constructor.getValue(obj.scoreType || obj.ScoreType);
        this.reason = this.constructor.getValue(obj.reason || obj.Reason);
        this.additionalOutputData =
          this.constructor.getValue(obj.additionalOutputData
     || obj.AdditionalOutputData);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'name', realName: 'Name' },
            { name: 'mclass', realName: 'Class' },
            { name: 'horizon', realName: 'Horizon' },
            { name: 'probability', realName: 'Probability' },
            { name: 'score', realName: 'Score' },
            { name: 'scoreType', realName: 'ScoreType' },
            { name: 'reason', realName: 'Reason' },
            { name: 'additionalOutputData', realName: 'AdditionalOutputData' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = Score;
